{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "12327724865840544060"
    }
  },
  "parameters": {
    "resourceName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the private endpoint resource to create."
      }
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource ID of the subnet where the endpoint needs to be created."
      }
    },
    "serviceResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. Resource ID of the resource that needs to be connected to the network."
      }
    },
    "groupIds": {
      "type": "array",
      "metadata": {
        "description": "Required. Subtype(s) of the connection to be created. The allowed values depend on the type serviceResourceId refers to."
      }
    },
    "applicationSecurityGroups": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Application security groups in which the private endpoint IP configuration is included."
      }
    },
    "customNetworkInterfaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The custom name of the network interface attached to the private endpoint."
      }
    },
    "ipConfigurations": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. A list of IP configurations of the private endpoint. This will be used to map to the First Party Service endpoints."
      }
    },
    "privateDnsZoneGroup": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The private DNS zone group configuration used to associate the private endpoint with one or multiple private DNS zones. A DNS zone group can support up to 5 DNS zones."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    },
    "customDnsConfigs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Custom DNS configurations."
      }
    },
    "manualPrivateLinkServiceConnections": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Manual PrivateLink Service Connections."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-05-01",
      "name": "[parameters('resourceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "applicationSecurityGroups": "[parameters('applicationSecurityGroups')]",
        "customNetworkInterfaceName": "[parameters('customNetworkInterfaceName')]",
        "ipConfigurations": "[parameters('ipConfigurations')]",
        "manualPrivateLinkServiceConnections": "[parameters('manualPrivateLinkServiceConnections')]",
        "customDnsConfigs": "[parameters('customDnsConfigs')]",
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('resourceName')]",
            "properties": {
              "privateLinkServiceId": "[parameters('serviceResourceId')]",
              "groupIds": "[parameters('groupIds')]"
            }
          }
        ],
        "subnet": {
          "id": "[parameters('subnetResourceId')]"
        }
      }
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/privateEndpoints/{0}', parameters('resourceName'))]",
      "name": "[format('{0}-{1}-lock', parameters('resourceName'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('privateDnsZoneGroup')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PrivateEndpoint-PrivateDnsZoneGroup', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "privateDNSResourceIds": {
            "value": "[parameters('privateDnsZoneGroup').privateDNSResourceIds]"
          },
          "privateEndpointName": {
            "value": "[parameters('resourceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "665073765442094525"
            }
          },
          "parameters": {
            "privateEndpointName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent private endpoint. Required if the template is used in a standalone deployment."
              }
            },
            "privateDNSResourceIds": {
              "type": "array",
              "maxLength": 5,
              "minLength": 1,
              "metadata": {
                "description": "Required. Array of private DNS zone resource IDs. A DNS zone group can support up to 5 DNS zones."
              }
            },
            "resourceName": {
              "type": "string",
              "defaultValue": "default",
              "metadata": {
                "description": "Optional. The name of the private DNS zone group."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "privateDnsZoneConfigs",
                "count": "[length(parameters('privateDNSResourceIds'))]",
                "input": {
                  "name": "[last(split(parameters('privateDNSResourceIds')[copyIndex('privateDnsZoneConfigs')], '/'))]",
                  "properties": {
                    "privateDnsZoneId": "[parameters('privateDNSResourceIds')[copyIndex('privateDnsZoneConfigs')]]"
                  }
                }
              }
            ]
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('privateEndpointName'), parameters('resourceName'))]",
              "properties": {
                "privateDnsZoneConfigs": "[variables('privateDnsZoneConfigs')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('resourceName')]",
              "metadata": {
                "description": "The name of the private endpoint DNS zone group."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', parameters('privateEndpointName'), parameters('resourceName'))]",
              "metadata": {
                "description": "The resource ID of the private endpoint DNS zone group."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the private endpoint DNS zone group was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName'))]"
      ]
    },
    {
      "copy": {
        "name": "privateEndpoint_roleAssignments",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PrivateEndpoint-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "description": {
            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
          },
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "principalType": {
            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "condition": {
            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), parameters('roleAssignments')[copyIndex()].condition, '')]"
          },
          "delegatedManagedIdentityResourceId": {
            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId, '')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "5743335550884503379"
            }
          },
          "parameters": {
            "principalIds": {
              "type": "array",
              "metadata": {
                "description": "Required. The IDs of the principals to assign the role to."
              }
            },
            "roleDefinitionIdOrName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
              }
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the resource to apply the role assignment to."
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the role assignment."
              }
            },
            "condition": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
              }
            },
            "conditionVersion": {
              "type": "string",
              "defaultValue": "2.0",
              "allowedValues": [
                "2.0"
              ],
              "metadata": {
                "description": "Optional. Version of the condition."
              }
            },
            "delegatedManagedIdentityResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Id of the delegated managed identity resource."
              }
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Network/privateEndpoints/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(resourceId('Microsoft.Network/privateEndpoints', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "description": "[parameters('description')]",
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]",
                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group the private endpoint was deployed into."
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName'))]",
      "metadata": {
        "description": "The resource ID of the private endpoint."
      }
    },
    "name": {
      "type": "string",
      "value": "[parameters('resourceName')]",
      "metadata": {
        "description": "The name of the private endpoint."
      }
    },
    "location": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('resourceName')), '2022-05-01', 'full').location]",
      "metadata": {
        "description": "The location the resource was deployed into."
      }
    }
  }
}